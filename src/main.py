import streamlit as st
from datetime import datetime
import pandas as pd
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å Python
sys.path.insert(0, os.path.abspath(os.path.dirname(os.path.dirname(__file__))))

from src.utils.data_fetcher import DataFetcher, PortfolioDataManager
from src.utils.calculations import PortfolioAnalytics
from src.utils.risk_management import RiskManagement
from src.utils.visualization import PortfolioVisualization
import src.config as config
from src.pages import portfolio_creation, portfolio_analysis, portfolio_optimization
from src.utils.scenario_chaining import scenario_chaining_page
from src.utils.advanced_visualizations import create_stress_impact_heatmap, create_interactive_stress_impact_chart, create_risk_tree_visualization
from src.utils.historical_context import display_historical_context, historical_analogy_page

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="Portfolio Analyzer",
    page_icon="üíº",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
if 'current_page' not in st.session_state:
    st.session_state.current_page = "–ì–ª–∞–≤–Ω–∞—è"


def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    data_fetcher = DataFetcher(cache_dir=str(config.CACHE_DIR), cache_expiry_days=config.CACHE_EXPIRY_DAYS)
    portfolio_manager = PortfolioDataManager(data_fetcher, storage_dir=str(config.PORTFOLIO_DIR))

    # –ó–∞–¥–∞–µ–º API –∫–ª—é—á–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if config.ALPHA_VANTAGE_API_KEY:
        data_fetcher.api_keys['alpha_vantage'] = config.ALPHA_VANTAGE_API_KEY

    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    st.sidebar.title("–ù–∞–≤–∏–≥–∞—Ü–∏—è")

    # –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü
    pages = [
        "–ì–ª–∞–≤–Ω–∞—è",
        "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è",
        "–ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è",
        "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ—Ä—Ç—Ñ–µ–ª—è",
        "–¶–µ–ø–æ—á–∫–∏ —Å—Ç—Ä–µ—Å—Å-—Å–æ–±—ã—Ç–∏–π",  # –ù–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –∞–Ω–∞–ª–æ–≥–∏–∏"  # –ù–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    ]

    # –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    selected_page = st.sidebar.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", pages)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–µ—Å—Å–∏–∏
    st.session_state.current_page = selected_page

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if selected_page == "–ì–ª–∞–≤–Ω–∞—è":
        show_home_page(data_fetcher, portfolio_manager)
    elif selected_page == "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è":
        portfolio_creation.run(data_fetcher, portfolio_manager)
    elif selected_page == "–ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è":
        portfolio_analysis.run(data_fetcher, portfolio_manager)
    elif selected_page == "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ—Ä—Ç—Ñ–µ–ª—è":
        portfolio_optimization.run(data_fetcher, portfolio_manager)
    elif selected_page == "–¶–µ–ø–æ—á–∫–∏ —Å—Ç—Ä–µ—Å—Å-—Å–æ–±—ã—Ç–∏–π":
        scenario_chaining_page()  # –ù–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    elif selected_page == "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –∞–Ω–∞–ª–æ–≥–∏–∏":
        historical_analogy_page()  # –ù–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    with st.sidebar.expander("–û –ø—Ä–æ–≥—Ä–∞–º–º–µ"):
        st.write("""
        **–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–º –ø–æ—Ä—Ç—Ñ–µ–ª–µ–º** –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å, 
        –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ—Ä—Ç—Ñ–µ–ª–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º 
        —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∏ –º–æ–¥–µ–ª–µ–π.

        –ê–≤—Ç–æ—Ä: Keril & Claude AI 
        –í–µ—Ä—Å–∏—è: 1.0.0
        """)

    # –°—Ç–∞—Ç—É—Å API
    with st.sidebar.expander("–°—Ç–∞—Ç—É—Å API"):
        if config.ALPHA_VANTAGE_API_KEY:
            st.success("Alpha Vantage API: –ü–æ–¥–∫–ª—é—á–µ–Ω–æ")
        else:
            st.warning("Alpha Vantage API: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")

        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –≤—ã–∑–æ–≤–æ–≤ API
        st.write("–°—á–µ—Ç—á–∏–∫–∏ –≤—ã–∑–æ–≤–æ–≤ API:")
        st.write(f"- yFinance: {data_fetcher.api_call_counts['yfinance']}")
        st.write(f"- Alpha Vantage: {data_fetcher.api_call_counts['alpha_vantage']}")

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞
        if st.button("–û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à –¥–∞–Ω–Ω—ã—Ö"):
            data_fetcher.clear_cache()
            st.success("–ö–µ—à –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω!")


def show_home_page(data_fetcher, portfolio_manager):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã

    Args:
        data_fetcher: –≠–∫–∑–µ–º–ø–ª—è—Ä DataFetcher –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        portfolio_manager: –≠–∫–∑–µ–º–ø–ª—è—Ä PortfolioDataManager –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ—Ä—Ç—Ñ–µ–ª—è–º–∏
    """
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    st.title("Investment Portfolio Management System")

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    st.write("""
    Welcome to our advanced portfolio management system! This application helps investors create, analyze, optimize, 
    and monitor investment portfolios using sophisticated financial models and interactive visualizations.
    """)

    # –†–∞–∑–¥–µ–ª—è–µ–º —ç–∫—Ä–∞–Ω –Ω–∞ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏
    col1, col2 = st.columns(2)

    with col1:
        # –ö—Ä–∞—Ç–∫–∏–π –æ–±–∑–æ—Ä —Ñ—É–Ω–∫—Ü–∏–π
        st.subheader("Key Capabilities")

        st.markdown("""
        #### üìà Portfolio Management
        - Create and track multiple investment portfolios
        - Import/export portfolio data from/to CSV and Excel
        - Real-time data fetching for market information
        - Customizable views for different analysis needs

        #### üìä Advanced Analytics
        - Comprehensive performance metrics (returns, volatility, drawdowns)
        - Risk-adjusted measurements (Sharpe, Sortino, Calmar)
        - Benchmark comparison against major indices
        - Calendar-based analysis and seasonal patterns

        #### üîç Risk Assessment
        - Multi-dimensional risk analysis (VaR, CVaR, drawdowns)
        - Stress testing against historical and hypothetical scenarios
        - Correlation analysis to identify portfolio vulnerabilities
        - Risk contribution breakdown by asset and sector

        #### üßÆ Portfolio Optimization
        - Multiple optimization methodologies (Markowitz, Risk Parity)
        - Efficient frontier visualization with interactive selection
        - Custom constraint implementation for real-world limitations
        - Tactical asset allocation recommendations
        """)

    with col2:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Ä—Ç—Ñ–µ–ª–µ–π
        portfolios = portfolio_manager.list_portfolios()

        st.subheader("Your Portfolios")

        if portfolios:
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –ø–æ—Ä—Ç—Ñ–µ–ª—è–º–∏
            portfolios_df = pd.DataFrame({
                '–ù–∞–∑–≤–∞–Ω–∏–µ': [p['name'] for p in portfolios],
                '–ê–∫—Ç–∏–≤–æ–≤': [p['asset_count'] for p in portfolios],
                '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ': [p['last_updated'] for p in portfolios]
            })

            st.dataframe(portfolios_df, use_container_width=True)

            # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
            st.subheader("Quick Actions")

            col1, col2 = st.columns(2)

            with col1:
                if st.button("Create New Portfolio"):
                    st.session_state.current_page = "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è"
                    st.experimental_rerun()

            with col2:
                if st.button("Analyze Existing Portfolio"):
                    st.session_state.current_page = "–ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è"
                    st.experimental_rerun()
        else:
            st.info("You don't have any portfolios yet. Start by creating your first portfolio.")

            if st.button("Create First Portfolio"):
                st.session_state.current_page = "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è"
                st.experimental_rerun()

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–µ–∫—Ü–∏—è
    st.subheader("Getting Started")

    with st.expander("Guide for Beginners"):
        st.write("""
        ### Step-by-Step Guide

        1. **Create or Import a Portfolio**: Navigate to the "Create Portfolio" section to:
           - Add investments manually with ticker search
           - Import from CSV with your existing holdings
           - Use templates for common investment strategies
           - Specify weights or dollar amounts for each position

        2. **Analyze Your Portfolio**: In the "Portfolio Analysis" section, you can:
           - Review key performance metrics and risk measures
           - Compare against benchmarks and historical periods
           - Explore asset correlations and diversification metrics
           - Conduct stress tests and scenario analysis

        3. **Optimize Your Portfolio**: The "Portfolio Optimization" section allows you to:
           - Visualize the efficient frontier for your asset universe
           - Find the optimal portfolio based on your risk preference
           - Apply different optimization methodologies
           - Set constraints on asset allocations

        4. **Explore Advanced Features**: Additional specialized tools include:
           - Stress scenario chains for modeling complex market events
           - Historical analogies for market condition comparison
           - Rolling metrics to observe changing performance characteristics
           - Monte Carlo simulations for future projections
        """)

    # Practical Applications Section
    st.subheader("Practical Applications")

    st.write("""
    - **Long-term investors**: Create and monitor diversified portfolios aligned with your investment goals
    - **Active traders**: Analyze risk exposures and optimize position sizing
    - **Financial advisors**: Demonstrate portfolio characteristics and potential improvements to clients
    - **Students and researchers**: Explore financial theories with real market data

    This system combines modern portfolio theory, quantitative risk management, and interactive data visualization 
    to provide powerful insights for investment decision-making.
    """)


if __name__ == "__main__":
    main()